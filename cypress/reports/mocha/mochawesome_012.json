{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-16T09:39:19.841Z",
    "end": "2022-06-16T09:39:27.415Z",
    "duration": 7574,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cbf3b09c-efd7-405a-b621-7fe945a17f7d",
      "title": "",
      "fullFile": "cypress/integration/WebDatePicker.spec.js",
      "file": "cypress/integration/WebDatePicker.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f57aeb05-4314-482f-a853-7b3c13defa6a",
          "title": "web datepicker",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "First test",
              "fullTitle": "web datepicker First test",
              "timedOut": null,
              "duration": 7417,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function selectDateFromCurrent(day) {\n  let date = new Date();\n  date.setDate(date.getDate() + day);\n  let futureDate = date.getDate();\n  let futureMonth = date.toLocaleDateString('default', {\n    month: 'short'\n  });\n  let dateAssert = futureMonth + ' ' + futureDate + ', ' + date.getFullYear();\n  cy.get('nb-calendar-navigation').invoke('attr', 'ng-reflect-date').then(dateAttribute => {\n    if (!dateAttribute.includes(futureMonth)) {\n      cy.get('[data-name=\"chevron-right\"]').click();\n      selectDateFromCurrent(day);\n    } else {\n      cy.get('nb-calendar-picker-row [class=\"day-cell ng-star-inserted\"]').contains(futureDate).click();\n    }\n  });\n  return dateAssert;\n}\ncy.visit('/');\ncy.contains('Forms').click();\ncy.contains('Datepicker').click();\ncy.contains('nb-card', 'Common Datepicker').find('input').then(input => {\n  cy.wrap(input).click();\n  let dateAssert = selectDateFromCurrent(300);\n  cy.wrap(input).invoke('prop', 'value').should('contain', dateAssert);\n  cy.wrap(input).should('have.value', dateAssert);\n});",
              "err": {},
              "uuid": "7f694726-ca9c-4cba-9c68-7b249fee987a",
              "parentUUID": "f57aeb05-4314-482f-a853-7b3c13defa6a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f694726-ca9c-4cba-9c68-7b249fee987a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7417,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}